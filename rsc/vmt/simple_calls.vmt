(define-fun bla ( (in Int) ) Bool (>= in 0))
(declare-fun var () Bool)

;; Defines a transition system from some initial and transition predicates.
(define-sys sys_a 
  ;; State signature.
  ( (in Bool) (out Int) )
  ;; Init.
  (and
    (ite (_ curr in) (= (_ curr out) 1) (= (_ curr out) 0))
    (bla (_ curr out))
  )
  ;; Trans.
  (and
    (ite
      (_ next in)
      (= (_ next out) (+ (_ curr out) 1))
      (= (_ next out) (_ curr out))
    )
    var
  )
  ;; Composition.
  ()
)

;; Defines a property over a state.
(define-prop out_positive sys_a
  (>= (_ curr out) 0)
)
(define-prop out_le_10 sys_a
  (<= (_ curr out) 10)
)

;; Check.
( verify sys_a (out_positive out_le_10) )

