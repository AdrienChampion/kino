(define-state state_of_a
  (in Bool) (out Int)
)

(define-init init_of_a state_of_a
  (ite (state in) (= (state out) 1) (= (state out) 0))
)

(define-trans trans_of_a state_of_a
  (ite (next in) (= (next out) (+ (state out) 1)) (= (next out) (state out)))
)

(define-system sys_a state_of_a
  init_of_a
  trans_of_a
)

(define-pred out_positive state_of_a
  (>= (state out) 0)
)

( check sys_a (out_positive) )

