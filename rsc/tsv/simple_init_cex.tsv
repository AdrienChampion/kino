;; node a (in: bool) returns (out: int) ;
;; let
;;   out = (
;;    if in then 1 else 0
;;  ) -> (
;;    if in then pre out + 1 else pre out
;;  ) ;
;;  --%PROPERTY out < 0 ;
;; tel

(define-sys sys_a 
  ( (in Bool) (out Int) )
  ()
  (ite (_ state in) (= (_ state out) 1) (= (_ state out) 0))
  (ite
    (_ next in)
    (= (_ next out)
    (+ (_ state out) 1)) (= (_ next out) (_ state out))
  )
  ()
)

(define-prop out_neg sys_a
  (< (_ state out) 0)
)

( verify sys_a
  (out_neg)
)

