;; node a (in: bool) returns (out: int) ;
;; let
;;   out = (
;;    if in then 1 else 0
;;  ) -> (
;;    if in then pre out + 1 else pre out
;;  ) ;
;;  --%PROPERTY out >= 0 ;
;; tel

;; Defines a transition system from some initial and transition predicates.
(define-sys sys_a 
  ;; State signature.
  ( (in Bool) (out Int) )
  ;; Local definitions.
  ()
  ;; Init.
  (ite (_ state in) (= (_ state out) 1) (= (_ state out) 0))
  ;; Trans.
  (ite
    (_ next in)
    (= (_ next out) (+ (_ state out) 1))
    (= (_ next out) (_ state out))
  )
  ;; Composition.
  ()
)

;; Defines a property over a state.
(define-prop out_positive sys_a
  (>= (_ state out) 0)
)

(define-fun act () Bool true)

;; Check.
( verify sys_a (out_positive) )

